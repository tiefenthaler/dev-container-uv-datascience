# Dev Container Configuration File.
# Using bind mounts instead of watch for development to sync changes made in the container back to the host.

# This file depends on a .env file in the root directory of the dev container for dynamic variable interpolation.
# - The .env file is automatically loaded per default by Docker Compose and is not passed to the container during build.

# The x-args section defines a reusable set of arguments using YAML anchors.
# - BUILD arguments ("UV_VER", "DEBIAN_VER" and "WORKSPACE_NAME") to pass to Dockerfile.
x-args: &default-args
  UV_VER: "0.5.5"
  DEBIAN_VER: "bookworm"
  WORKSPACE_NAME_: vscode/${WORKSPACE_NAME}
  PROJECT_NAME_: ${PROJECT_NAME}

services: # Top level element to configure the arguments of multiple services
  myproject: # "project" refers to the name of your project/application for which configurations are defined. Multiple services can be configured.
    build: # Tells Docker Compose to build the Docker image using the Dockerfile in the specified directory.
      context: .
      dockerfile: ./Dockerfile.debug
      # Build argument (passed to Dockerfile only)
      args:
        <<: *default-args # The <<: *default-args syntax merges the default-args into the args section of the build configuration.
    image: "${DEV_USER}.dev-container-uv.${PROJECT_NAME}" # Explicit way to define the image name
    # networks:
    #   - app-net

    # Host the FastAPI application on port 8000
    ports:
      - "8000:8000"

    # Volumes are persistent data stores (outside container), mounted to be usable by the container.
    volumes:
      # Mount the current directory to ${WORKSPACE_NAME} so code changes don't require an image rebuild. .venv is excluded in the .dockerignore file.
      - ..:/vscode/${WORKSPACE_NAME}
      # Mount the virtual environment separately, so the developer's environment doesn't end up in the container.
      - /vscode/${WORKSPACE_NAME}/.venv

    working_dir: /vscode/${WORKSPACE_NAME}

    # Runtime environment variable, passed to devcontainer.json. Not available for volumes, networks, or build arguments.
    # environment:

    # Runtime environment variable, passed to devcontainer.json. Not available for volumes, networks, or build arguments.
    # env_file:
      # - path: .env.vars.local
      #   required: true

    # Default command to start the dev container
    command:
      - sh -c "chmod -R 777 /vscode/${WORKSPACE_NAME} && tail -f /dev/null" # Set permissions on the working directory for root user
      - docker-compose down # Remove the container after exiting
