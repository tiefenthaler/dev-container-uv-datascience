// For format details, see https://aka.ms/devcontainer.json.
{
	"name": "${localEnv:LOGNAME}.dev-container-uv.${localWorkspaceFolderBasename}",
	// Build image using docker compose based on build specs in docker-compose.yml
	"dockerComposeFile": ["./docker-compose.yml"],
	"service": "myproject",
	"runServices": ["myproject"],	
	"workspaceFolder": "/vscode/workspace", // SET THIS to name the project folder to your local project folder name: "workspaceFolder": "/vscode/${localWorkspaceFolderBasename}",
	"postCreateCommand": {
		// REMOVE THIS LINE, ADD LINE BELOW, REMOVE "postStartCommand"/"uv-add-project-dependencies-editable"+"uv-sync-project": if you want to properly install source dependencies.
		// "uv-sync--frozen--no-install-project": "uv sync --frozen --no-install-project"
		// "uv-sync--frozen--no-install-workspace": "uv sync --frozen --no-install-workspace"
		// ADD THIS LINE, REMOVE LINE ABOVE, REMOVE "postStartCommand"/"uv-sync--frozen--no-install-project": if you want to properly install source dependencies.
		// "uv-sync--frozen": "uv sync --frozen"
		// "uv-add-project-dependencies-editable": "uv add --editable ./src/dev_container_uv_datascience"
		// "uv-add-project-dependencies-editable": "uv add --editable ./src/"
		// "uv-sync-project": "uv sync"
	},
	"postStartCommand": {
		// "uv-add-project-dependencies-editable": "uv add --editable ./packages/litautoencoder",
		// "uv-sync--frozen": "uv sync --frozen"
		// Optional: If applicable, add the following lines for installations.
		// "uv-run-pre-commit-install": "uv run pre-commit install"
	},
	"features": {
        "ghcr.io/dhoeric/features/hadolint:1": {}
    },
	"customizations": {
        // When connecting to a docker container your local VS Code starts an instance without extensions to ensure isolation and consistency.
        // Therefore extensions can be specified here for automatic installation when connecting.
        "vscode": {
			"settings": {
				// Define terminal shell for Dev Container.
				"terminal.integrated.profiles.linux": {
					"bash": {
						"path": "/bin/bash"
					}
				},
				"jupyter.notebookFileRoot": "${workspaceRoot}"
			},
            // Use the VS Code Extensions "Identifier" to define extensions.
            "extensions": [
				// Python
                "ms-python.python",
				"ms-toolsai.jupyter",
				// Docker
				"ms-azuretools.vscode-docker",
				"ms-vscode-remote.remote-containers",
				"ms-vscode-remote.remote-ssh-edit",
				"ms-vscode-remote.remote-ssh",
				"exiasr.hadolint",
				// Formatting and Linting
				"charliermarsh.ruff",
				"davidanson.vscode-markdownlint",
				"xshrim.txt-syntax",
				"tamasfe.even-better-toml",
				"streetsidesoftware.code-spell-checker",
				// Data
				"alexcvzz.vscode-sqlite",
				"grapecity.gc-excelviewer",
				"mechatroner.rainbow-csv",
				"zainchen.json",
				"yzane.markdown-pdf",
				"ms-toolsai.datawrangler",
				"yzhang.markdown-all-in-one",
				// Cloud
				//"ms-azuretools.vscode-docker",
				// Git
				"github.remotehub",
				// AI Coding Assistant
				"github.copilot",
				"github.copilot-chat"
            ]
        }
    },
	"containerEnv": {
        "DISPLAY": "dummy",
        "PYTHONUNBUFFERED": "True",
        "UV_LINK_MODE": "copy",
        "UV_PROJECT_ENVIRONMENT": "/home/vscode/workspace/.venv" // SET THIS to name the project folder to your local project folder name: "UV_PROJECT_ENVIRONMENT": "/home/vscode/${localWorkspaceFolderBasename}/.venv"
    },
	"remoteUser": "vscode"
}
