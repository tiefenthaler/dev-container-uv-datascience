# .github/workflows/check_all_workflows.yml

name: CI Workflows Status

on:
  # Run when other workflows complete
  workflow_run:
    workflows:
      - "Testing"
      - "Publish Docs via GitHub Pages"
      - "Docker"
      - "Ruff"
      - "Pyright"
    types:
      - completed
  # Allow manual triggers
  workflow_dispatch:
  # Also run on pushes to main
  push:
    branches: [main]

permissions:
  contents: read
  actions: read

jobs:
  check_workflows:
    runs-on: ubuntu-latest
    steps:
      - name: Check Workflow Status
        id: check
        uses: actions/github-script@v6
        with:
          script: |
            const targetWorkflows = [
              'Testing',
              'Publish Docs via GitHub Pages',
              'Docker',
              'Ruff',
              'Pyright'
            ];
            
            for (const workflow of targetWorkflows) {
              console.log(`Checking workflow: ${workflow}`);
              
              const { data: { workflow_runs } } = await github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: workflow,
                branch: 'main',
                per_page: 1
              });
              
              if (workflow_runs.length === 0) {
                console.log(`No runs found for ${workflow}`);
                continue;
              }
              
              const latestRun = workflow_runs[0];
              console.log(`Latest run for ${workflow}: ${latestRun.status} - ${latestRun.conclusion}`);
              
              if (latestRun.status !== 'completed' || latestRun.conclusion !== 'success') {
                console.log(`Workflow ${workflow} is not successful`);
                return false;
              }
            }
            
            console.log('All workflows are successful');
            return true;

      - name: Create badge
        if: always()
        uses: schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: YOUR_GIST_ID
          filename: workflows.json
          label: workflows
          message: ${{ steps.check.outputs.result == 'true' && 'passing' || 'failing' }}
          color: ${{ steps.check.outputs.result == 'true' && 'success' || 'critical' }}
